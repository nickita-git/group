import pygame
import sys
import os
from io import BytesIO
# Этот класс поможет нам сделать картинку из потока байт
import argparse
import requests
from PIL import Image

pygame.init()
parser = argparse.ArgumentParser()
parser.add_argument('--coords', nargs=2)
parser.add_argument('--size', nargs=2)


def load_image(name, colorkey=None):
    fullname = os.path.join(name)
    image = pygame.image.load(fullname)
    if colorkey is not None:
        if colorkey == -1:
            colorkey = image.get_at((0, 0))
            image.set_colorkey(colorkey)
    else:
        image = image.convert_alpha()
    return image


def conc(sp, value):
    new_one = []
    for i in sp:
        new_one.append(str(float(i) + value))
    return new_one

args = parser.parse_args()
map_params = {
    "ll": ','.join(args.coords),
    "l": 'map',
    "spn": ','.join(args.size)}
screen = pygame.display.set_mode((800, 800))
map_api_server = "http://static-maps.yandex.ru/1.x/"
running = True
all_sprites = pygame.sprite.Group()
map = pygame.sprite.Sprite(all_sprites)
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                args.size = conc(args.size, 0.001)
                map_params['spn'] = ','.join(args.size)
            elif event.key == pygame.K_s:
                args.size = conc(args.size, -0.001)
                map_params['spn'] = ','.join(args.size)
    response = requests.get(map_api_server, params=map_params)
    im = Image.open(BytesIO(
        response.content))
    im.save('map.png')
    map.image = load_image('map.png')
    map.rect = map.image.get_rect()
    map.rect.x, map.rect.y = 0, 0
    all_sprites.draw(screen)
    all_sprites.update()
    pygame.display.flip()
